/* В файле скрипта создать 2 переменные (money и time), которые будут получать данные от пользователя:*/
let money = +prompt("Ваш бюджет на месяц?", ""),
  time = prompt("Введите дату в формате YYYY-MM-DD", "");

/*Создать объект appData, который будет содержать такие данные: */
let appData = {
  /* бюджет (передаем сюда переменную из п.2) */
  budget: money,
  /* вторая переменная */
  timeData: time,
  /* объект с обязательными расходами */
  expenses: {},
  /* объект с необязательными расходами */
  optionalExpenses: {},
  /* массив с доп. доходом */
  income: [],
  /* свойство savings (выставляем его как false) */
  savings: false
};

/* Задать пользователю по 2 раза вопросы: */
/*let a1 = prompt("Введите обязательную статью расходов в этом месяце", ''),
	a2 = prompt("Во сколько обойдется?", ''),
	a3 = prompt("Введите обязательную статью расходов в этом месяце", ''),
	a4 = prompt("Во сколько обойдется?", '');*/

/*Записываем вопросы в объект*/
/*appData.expenses[a1] = a2;
appData.expenses[a3] = a4;*/

/*ВТОРАЯ ЧАСТЬ ДЗ: цикл
цикл по вопросам пользователю
внутри задаём переменную i равную нулю
далее условие остановки цикла
вопросов 2, поэтому i<2
далее действие
чтобы создать новое свойство, либо метод для оъекта есть два способа: через точку или через - []Tсли мы используем [] - то свойство может содержать любую строку
И когда мы уже получаем информацию от пользователя по [a], то мы должны получить от него ответ - b т.е. во сколько это обойдётся.
Таким образом у нас создаётся пара: ключ [a] + значение b.
*/

/*Иногда нам нужно выполнить различные действия в зависимости от условий.

Для этого мы можем использовать оператор if и условный оператор ?, который также называют «оператор вопросительный знак».
Оператор if(...) вычисляет условие в скобках и, если результат true, то выполняет блок кода.

Оператор if(...) проверяет на tru-шность и даёт добро или бородит
т.е. говорит. этот код выполниться при условии...*/

/*!= - не равно*/

/*Оператор typeof возвращает строку, указывающую тип операнда.*/
//ПРОВЕРКИ!!!
/*if ((typeof (a)) === "string" - проверяет, что входящий тип данных - строка
&& typeof a != null - проверка на отмену действия
т.е. typeof-проверяем, что переменная - a - не должна быть !=  в значении null
&& typeof b != null - то же самое и для b
проверка на отмену
b != "" - запретит пользователю оставлять пустую строку
a.length < 50 - ограничение символов в строке*/
for (let i = 0; i < 2; i++) {
  let a = prompt("Введите обязательную статью расходов в этом месяце", ""),
    b = prompt("Во сколько обойдется?", "");
  /* от prompt мы всегда получаем строку,
	но нам здесь необходимо число, поэтому мы ставим перед prompt унарный +*/
  if (
    typeof a === "string" &&
    typeof a != null &&
    typeof b != null &&
    a != "" &&
    b != "" &&
    a.length < 50
  ) {
    console.log("done");
    appData.expenses[a] = b;
  } else {

  }
}

//прописать возвращение на цикл обратно
//вернуться к вопросу заново

return

/* Запишем бюджет на один день прямо в данные программы, ориернтируясь на ответ пользователя*/

appData.moneyPerDay = appData.budget / 30;

alert("Ежедневный бюджет:" + appData.moneyPerDay);

/* Уровень достатка человека */

if (appData.moneyPerDay < 100) {
  console.log("Минимальный уровень достатка");
} else if (appData.moneyPerDay > 100 && appData.moneyPerDay < 2000) {
  console.log("Cредний уровень достатка");
} else if (appData.moneyPerDay > 2000) {
  console.log("Высокий уровень достатка");
} else {
  console.log("Произошла ошибка");
}

//else if - иначе при условии

/* Вывести на экран пользователя бюджет на 1 день (брать месяц за 30 дней, использовать alert) */